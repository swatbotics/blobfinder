<!-- -*- mode: xml -*- -->
<!-- (above line gets Emacs to recognize this as an XML file) -->

<launch>

  <!-- 
     Data file to load for blob finding.  This file holds the
     colors being tracked.  You can use the colorpicker program
     to generate one.
    -->
  <param name="/blobfinder/datafile" type="string" 
	 value="$(find blobfinder)/data/$(env TURTLEBOT_3D_SENSOR).data" />

  <!-- 
     Set the "to" attribute here to whatever image you would
     like to analyze. For instance, to use the image from 
     the Kinect, set to /camera/rgb/image_raw
    -->
  <remap from="image" to="/camera/rgb/image_raw" />
 
  <!-- 
     Set this to true to use a PointCloud2 message as input instead of
     an Image message (i.e., to use the 3D data from the Kinect).
    -->
  <param name="/blobfinder/use_points" type="bool" value="false" />

  <!-- 
     X (left) coordinate of Region-of-Interest window. 

     Negative numbers will index from the right side, 
     so setting -100 on an image of width 640 would be the
     same as setting to 540.
    -->
  <param name="/blobfinder/roi_x" type="int" value="0"/>

  <!-- 
     Y (top) coordinate of Region-of-Interest window. 

     Negative numbers will index from the bottom side, 
     so setting -100 on an image of height 480 would be the
     same as setting to 380.
    -->
  <param name="/blobfinder/roi_y" type="int" value="0"/>

  <!--
     Width of the region of interest. Setting to zero
     is equivalent to automatically setting the right
     hand side of the ROI to the right side of the image.
    -->
  <param name="/blobfinder/roi_w" type="int" value="0"/>

  <!--
     Height of the region of interest. Setting to zero
     is equivalent to automatically setting the bottom
     side of the ROI to the bottom the image.
    -->
  <param name="/blobfinder/roi_h" type="int" value="0"/>

  <!-- 
     Minimum area of blobs to be reported.  Setting this larger
     than zero is helpful for discarding small blobs.
    -->
  <param name="/blobfinder/min_blob_area" type="int" value="0"/>

  <!--
     Size of the morphological opening operator used to clean up
     the image before finding blobs.  Typically, 1 or 2 are good
     values.
    -->
  <param name="/blobfinder/open_size" type="int" value="2"/>

  <!-- 
     Maximum number of blobs to return (0 = return all). Since
     blobs are sorted by area (from largest to smallest, setting
     this to 1 will return only the largest blob in the scene.
    -->
  <param name="/blobfinder/max_blob_count" type="int" value="0"/>

  <!-- Finally, launch the blobfinder node. -->
  <node name="blobfinder_node" pkg="blobfinder" type="blobfinder_node" />

</launch>
